#:kivy 2.0.0
#:import Window kivy.core.window.Window

<MenuScreen>:
    canvas:
        Color:
            rgba: 0.71, 0.78, 0.84, 1
        Rectangle:
            pos: self.pos
            size: self.size

    Image:
        id: bg
        source: "images/menu_screen.png"
        pos: 0, 0
        size: Window.size
        center: Window.center

    BoxLayout:
        orientation: "vertical"
        size_hint: 100/4000., 100/2000.
        spacing: bg.norm_image_size[1]*0.035
        pos: 
            (bg.center_x - bg.norm_image_size[0]/2) + bg.norm_image_size[0]*(1160/4000.), \
            (bg.center_y - bg.norm_image_size[1]/2) + bg.norm_image_size[1]*(330/2000.)
        Button:
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(100/4000.)*2), (bg.norm_image_size[1]*(100/2000.)*2)
            background_normal: "images/buttons/liftbutton0.png"
            background_down:  "images/buttons/liftbutton1.png"
            on_release: root.manager.current = 'strengths'
        Button:
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(100/4000.)*2), (bg.norm_image_size[1]*(100/2000.)*2)
            background_normal: "images/buttons/liftbutton0.png"
            background_down:  "images/buttons/liftbutton1.png"
            on_release: root.manager.current = 'continue'
        Button:
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(100/4000.)*2), (bg.norm_image_size[1]*(100/2000.)*2)
            background_normal: "images/buttons/liftbutton0.png"
            background_down:  "images/buttons/liftbutton1.png"
            on_release: root.manager.current = 'settings'
        Button:
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(100/4000.)*2), (bg.norm_image_size[1]*(100/2000.)*2)
            background_normal: "images/buttons/liftbutton0.png"
            background_down:  "images/buttons/liftbutton1.png"
            on_release: root.manager.current = '?'
    Button:
        color: (0,0,0,1)
        font_size: bg.norm_image_size[1]*0.033
        text: "Quit"
        border: 0,0,0,0
        size_hint: None, None
        size:  (bg.norm_image_size[0]*(400/4000.)), (bg.norm_image_size[1]*(100/2000.))
        pos_hint: {"left": 0.01, "top": 0.99}
        background_normal: "images/buttons/longbutton0.png"
        background_down:  "images/buttons/longbutton1.png"
        on_release: app.stop()


<DeckButton>:
    source: "images/card_pile.png"
    background_normal: "images/card_pile.png"
    border: 0,0,0,0
    size_hint: None, None

<StrengthMenu>:
    canvas:
        Color:
            rgba: 0.71, 0.78, 0.84, 1
        Rectangle:
            pos: self.pos
            size: self.size

    Image:
        id: bg
        source: "images/strength_on_menu.png"
        pos: 0, 0
        size: Window.size
        center: Window.center
    # Odd cardpiles
    GridLayout:
        cols: 3
        size_hint: None, None
        row_default_height: bg.norm_image_size[1]*0.055
        row_force_default: True
        id: row1
        spacing: bg.norm_image_size[0]*0.0635
        pos: 
            (bg.center_x - bg.norm_image_size[0]/2) + bg.norm_image_size[0]*(1653/4000.), \
            (bg.center_y - bg.norm_image_size[1]/2) + bg.norm_image_size[1]*(1222/2000.)
        Label:
            text: "0"
        Label:
            text: "2"
        Label:
            text: "4"
        DeckButton:
            id: deck0
            index: 0
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
        DeckButton:
            id: deck2
            index: 2
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
        DeckButton:
            id: deck4
            index: 4
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
    # Even cardpiles
    GridLayout:
        cols: 3
        id: row2
        spacing: bg.norm_image_size[0]*0.0635
        pos: 
            (bg.center_x - bg.norm_image_size[0]/2) + bg.norm_image_size[0]*(1905/4000.), \
            (bg.center_y - bg.norm_image_size[1]/2) + bg.norm_image_size[1]*(1190/2000.)
        Label:
            text: "1"
        Label:
            text: "1"
        Label:
            text: "1"
        DeckButton:
            id: deck1
            index: 1
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
        DeckButton:
            id: deck3
            index: 3
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
        DeckButton:
            id: deck5
            index: 5
            size: (bg.norm_image_size[0]*(246/4000.)), (bg.norm_image_size[1]*(386/2000.))
            on_release: root.selectDeck(self.index)
    # Chosen cards
    RecycleView:
        id: cards_rv
        viewclass: "Image"
        size_hint: None, None
        do_scroll_y: False
        pos: 
            (bg.center_x - bg.norm_image_size[0]/2) + bg.norm_image_size[0]*(1610/4000.), \
            (bg.center_y - bg.norm_image_size[1]/2) + bg.norm_image_size[1]*(620/2000.)
        width:  (bg.norm_image_size[0]*(250/4000.)*5) * 1.1 + (bg.norm_image_size[0]*0.019*4) * 1.1  # 5 cards + 4 gaps
        height: bg.norm_image_size[1]*(350/2000.) * 1.1                                       # card_h
        RecycleBoxLayout:
            id: cards_rv_layout
            default_size: (bg.norm_image_size[0]*(250/4000.)) * 1.1, (bg.norm_image_size[1]*(350/2000.)) * 1.1
            default_size_hint: None, None
            height: bg.norm_image_size[1] * (350/2000.) * 1.1
            size_hint_y: None
            spacing: bg.norm_image_size[0]*0.0115
        
    # Buttons
    BoxLayout:
        size_hint: 400/4000., 100/2000.
        spacing: bg.norm_image_size[0]*0.15
        pos: 
            (bg.center_x - bg.norm_image_size[0]/2) + bg.norm_image_size[0]*(800/4000.), \
            (bg.center_y - bg.norm_image_size[1]/2) + bg.norm_image_size[1]*(290/2000.)
        Button:
            color: (0,0,0,1)
            font_size: bg.norm_image_size[1]*0.017
            text: "Back to main menu"
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(400/4000.)), (bg.norm_image_size[1]*(100/2000.))
            background_normal: "images/buttons/longbutton0.png"
            background_down:  "images/buttons/longbutton1.png"
            on_release: root.manager.current = 'menu'
        Button:
            color: (0,0,0,1)
            font_size: bg.norm_image_size[1]*0.023
            text: "Randomize"
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(400/4000.)), (bg.norm_image_size[1]*(100/2000.))
            background_normal: "images/buttons/longbutton0.png"
            background_down:  "images/buttons/longbutton1.png"
        Button:
            color: (0,0,0,1)
            font_size: bg.norm_image_size[1]*0.015
            text: "Start the adventure!"
            border: 0,0,0,0
            size_hint: None, None
            size:  (bg.norm_image_size[0]*(400/4000.)), (bg.norm_image_size[1]*(100/2000.))
            background_normal: "images/buttons/longbutton0.png"
            background_down:  "images/buttons/longbutton1.png"
        

<SettingsScreen>:
    canvas:
        Color:
            rgba: 0.71, 0.78, 0.84, 1
        Rectangle:
            pos: self.pos
            size: self.size

    Button:
        color: (0,0,0,1)
        font_size: 8
        text: "Back to main menu"
        border: 0,0,0,0
        size_hint: None, None
        size: 400/4, 100/4
        pos_hint: {"left": 0.01, "top": 0.99}
        background_normal: "images/buttons/longbutton0.png"
        background_down:  "images/buttons/longbutton1.png"
        on_release: root.manager.current = 'menu'

<QuestionScreen>:
    canvas:
        Color:
            rgba: 0.71, 0.78, 0.84, 1
        Rectangle:
            pos: self.pos
            size: self.size
    Button:
        color: (0,0,0,1)
        font_size: 8
        text: "Back to main menu"
        border: 0,0,0,0
        size_hint: None, None
        size: 400/4, 100/4
        pos_hint: {"left": 0.01, "top": 0.99}
        background_normal: "images/buttons/longbutton0.png"
        background_down:  "images/buttons/longbutton1.png"
        on_release: root.manager.current = 'menu'

<Player>:
    size: 36, 41
    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            texture: root.texture